// Copyright 2015 gRPC authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package MsgType;
import "google/protobuf/timestamp.proto";

message Empty {}

// Flute
message Node{
  string    uuid = 1;
  string    bmc_mac_addr = 2;
  string    bmc_ip = 3;
  string    pxe_mac_addr = 4;
  string    status = 5;
  string    description = 6;
  int32     cpu_cores = 7;
  int32     memory = 8;
  int32     active = 9;
  google.protobuf.Timestamp create_at = 10;
  bool      force_off = 11;
}

// Violin
message Server {
  string uuid = 1;
  string subnet_uuid = 2;
  string os = 3;
  string server_name = 4;
  string server_desc = 5;
  int32  cpu = 6;
  int32  memory = 7;
  int32  disk_size = 8;
  string status = 9;
  string user_uuid = 10;
  google.protobuf.Timestamp create_at = 11;
}

message VNC {
  string session_id = 1;
  string server_uuid = 2;
  enum VNCAction {
    CREATE = 0;
    DELETE = 1;
  }
  VNCAction action = 3;
}

message ServerNode {
  string uuid = 1;
  string server_uuid = 2;
  string node_uuid = 3;
  google.protobuf.Timestamp create_at = 4;
}

// Harp
message Subnet {
  string uuid = 1;
  string network_ip = 2;
  string netmask = 3;
  string gateway = 4;
  string next_server = 5;
  string name_server = 6;
  string domain_name = 7;
  string server_uuid = 8;
  string leader_node_uuid = 9;
  string os = 10;
  string subnet_name = 11;
  google.protobuf.Timestamp created_at = 12;
}

message AdaptiveIPSetting {
  string ext_iface_ip_address = 1;
  string netmask = 2;
  string gateway = 3;
  string start_ip_address = 4;
  string end_ip_address = 5;
}

message AdaptiveIPAvailableIPList {
  repeated string available_ip = 1;
}

message AdaptiveIPServer {
  string server_uuid = 1;
  string public_ip = 2;
  string private_ip = 3;
  string private_gateway = 4;
  string status = 5;
  string created_at = 6;
}
