// Copyright 2020 by YounSeok.Shim and ish.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package RpcFlute;
import public "msgType.proto";


service Flute {
  // Node
  rpc CreateNode (ReqCreateNode) returns (ResCreateNode) {}
  rpc GetNode (ReqGetNode) returns (ResGetNode) {}
  rpc GetNodeList (ReqGetNodeList) returns (ResGetNodeList) {}
  rpc GetNodeNum (MsgType.Empty) returns (ResGetNodeNum) {}
  rpc UpdateNode (ReqUpdateNode) returns (ResUpdateNode) {}
  rpc DeleteNode (ReqDeleteNode) returns (ResDeleteNode) {}
  // IPMI
  rpc NodePowerControl (ReqNodePowerControl) returns (ResNodePowerControl) {}
}

// Node
message ReqCreateNode {
  MsgType.Node node = 1;
}

message ResCreateNode {
  MsgType.Node node = 1;
}

message ReqGetNode {
  string UUID = 1;
}

message ResGetNode {
  MsgType.Node node = 1;
}

message ReqGetNodeList {
  MsgType.Node node = 1;
  int64 row = 2;
  int64 page = 3;
}

message ResGetNodeList {
  repeated MsgType.Node node = 1;
}

message ResGetNodeNum {
  int64 num = 1;
}

message ReqUpdateNode {
  MsgType.Node node = 1;
}

message ResUpdateNode {
  MsgType.Node node = 1;
}

message ReqDeleteNode {
  string UUID = 1;
}

message ResDeleteNode {
  string UUID = 1;
}

// IPMI
message ReqNodePowerControl {
  repeated MsgType.Node nodes = 1;
  enum PowerState {
    ON = 0;
    OFF = 1;
    FORCE_OFF = 2;
    FORCE_RESTART = 3;
  }
  PowerState power_state = 2;
}

message ResNodePowerControl {
  repeated string result = 1;
}
